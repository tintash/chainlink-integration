{
  "name": "chainlink-bridge",
  "version": "1.0.0",
  "description": "",
  "main": "dist/app.js",
  "scripts": {
    "build": "tsc",
    "prestart": "npm run build",
    "start": "export ENABLE_ORACLE_LISTENER=$npm_config_enable_oracle_listener; node -r dotenv/config .",
    "docker:build": "docker-compose -f configurations/docker-compose.stacks-blockchain-api.yml -f configurations/docker-compose.chainlink.yml -f configurations/docker-compose.event-observer.yml build",
    "docker:start": "export STACKS_CONFIG=$npm_config_stacks_network; npm run docker:start:mocknet",
    "docker:start:mocknet": "/bin/bash -c 'if [ \"$npm_config_stacks_network\" == mocknet ] || [ -z $npm_config_enable_oracle_listener ]; then export STACKS_CORE_API_URL=http://host.docker.internal:3999 && npm run docker:start:stacks-blockchain -- -d && npm run docker:start:event-observer; else npm run docker:start:event-observer; fi'",
    "docker:start:event-observer": "docker-compose -f configurations/docker-compose.chainlink.yml -f configurations/docker-compose.event-observer.yml up",
    "docker:start:stacks-blockchain": "docker-compose -f configurations/docker-compose.stacks-blockchain-api.yml up",
    "docker:stop": "docker-compose -f configurations/docker-compose.stacks-blockchain-api.yml -f configurations/docker-compose.chainlink.yml -f configurations/docker-compose.event-observer.yml stop",
    "docker:clean": "docker-compose -f configurations/docker-compose.stacks-blockchain-api.yml -f configurations/docker-compose.chainlink.yml -f configurations/docker-compose.event-observer.yml down -v -t 0",
    "test": "jest --setupFiles dotenv/config --config ./jest.config.js --coverage --runInBand --detectOpenHandles",
    "pretest:integration":"export STACKS_CONFIG=mocknet && npm run docker:start:stacks-blockchain -- -d", 
    "test:integration": "export DOTENV_CONFIG_PATH=src/tests/.env.test STACKS_CORE_API_URL=http://host.docker.internal:3999 && npm run docker:start:event-observer -- -d && cross-env NODE_ENV=test jest --config ./jest.config.integration.js --coverage --no-cache --runInBand --detectOpenHandles; npm run docker:clean",
    "lint": "npm run lint:eslint && npm run lint:prettier",
    "lint:eslint": "eslint . --ext .js,.jsx,.ts,.tsx -f codeframe",
    "lint:prettier": "prettier --check src/**/*.{ts,json}",
    "lint:fix": "eslint . --ext .js,.jsx,.ts,.tsx -f codeframe --fix && prettier --write --check src/**/*.{ts,json}"
  },
  "keywords": [],
  "prettier": "@stacks/prettier-config",
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@awaitjs/express": "^0.7.2",
    "@stacks/network": "^2.0.0-beta.0",
    "@stacks/prettier-config": "^0.0.8",
    "@stacks/transactions": "^2.0.1",
    "@types/morgan": "^1.9.2",
    "@types/nodemon": "^1.19.0",
    "@types/request": "^2.48.5",
    "@types/supertest": "^2.0.11",
    "cors": "^2.8.5",
    "cross-env": "^7.0.3",
    "dotenv": "^10.0.0",
    "express": "^4.17.1",
    "express-winston": "^4.1.0",
    "morgan": "^1.10.0",
    "nodemon": "^2.0.7",
    "request": "^2.88.2",
    "supertest": "^6.1.3",
    "winston": "^3.3.3"
  },
  "devDependencies": {
    "@jest/types": "^27.0.2",
    "@stacks/blockchain-api-client": "^0.67.0",
    "@types/cors": "^2.8.10",
    "@types/debug": "^4.1.5",
    "@types/express": "^4.17.12",
    "@types/jest": "^26.0.23",
    "@types/node-fetch": "^2.5.12",
    "@typescript-eslint/eslint-plugin": "^4.27.0",
    "@typescript-eslint/parser": "^4.27.0",
    "eslint": "^7.28.0",
    "prettier": "2.3.1",
    "source-map-support": "^0.5.19",
    "typescript": "^4.3.2",
    "jest": "^27.0.5",
    "ts-jest": "^27.0.3"
  }
}
 